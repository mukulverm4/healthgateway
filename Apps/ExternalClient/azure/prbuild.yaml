name: PR$(Rev:.r) #Build number

#Build variables
variables:
  App.Home: $(Build.SourcesDirectory)/Apps/ExternalClient
  App.Name: externalclient

pool:
  name: 'HealthGateway'

trigger: none

pr:
  branches:
   include:
   - dev  
  paths:
   include:
   - Apps/ExternalClient
   - Apps/Common
   
steps:
- task: Npm@1
  displayName: Install NPM Packages
  inputs:
    command: 'install'
    workingDir: '$(App.Home)/src/ClientApp'

# - task: DotNetCoreCLI@2
#   displayName: Run dotnet Tests
#   inputs:
#     command: 'test'
#     projects: '$(App.Home)/test/test.csproj'
#     arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
#     testRunTitle: 'ExternalClient'

# - script: |
#    set -e
#    dotnet tool install -g dotnet-reportgenerator-globaltool
#    reportgenerator -reports:$(App.Home)/test/**/coverage.cobertura.xml -targetdir:$(App.Home)/CodeCoverage -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
#   displayName: Create Code Coverage Report

#- task: DotNetCoreCLI@2
#   displayName: Run dotnet Tests
#   inputs:
#     command: 'test'
#     projects: '$(App.Home)/test/unit/ExternalClientTests.csproj'
#     testRunTitle: 'ExternalClient'

# - task: DotNetCoreCLI@2
#   displayName: Run dotnet Tests
#   inputs:
#     command: 'test'
#     projects: '$(App.Home)/test/test.csproj'
#     testRunTitle: 'ExternalClient'

# - task: PublishCodeCoverageResults@1
#   displayName: 'Publish Code Coverage'
#   inputs:
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(App.Home)/CodeCoverage/Cobertura.xml'
#     pathToSources: '$(App.Home)/src'
#     reportDirectory: '$(App.Home)/CodeCoverage'

- task: DotNetCoreCLI@2
  displayName: 'Publish dotnet Code'
  inputs:
    modifyOutputPath: false
    command: 'publish'
    publishWebProjects: false
    projects: '$(App.Home)/src'
    arguments: '-o $(Build.BinariesDirectory)'
    zipAfterPublish: false
